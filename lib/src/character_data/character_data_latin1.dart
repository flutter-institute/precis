// ignore_for_file: constant_identifier_names, prefer_interpolation_to_compose_strings

part of '../character_data.dart';

const _LatinA_Data =
    '\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800'
    '\u100F\u4800\u100F\u4800\u100F\u5800\u400F\u5000\u400F\u5800\u400F\u6000\u400F'
    '\u5000\u400F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800'
    '\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F'
    '\u4800\u100F\u4800\u100F\u5000\u400F\u5000\u400F\u5000\u400F\u5800\u400F\u6000'
    '\u400C\u6800\u0018\u6800\u0018\u2800\u0018\u2800\u601A\u2800\u0018\u6800\u0018\u6800'
    '\u0018\uE800\u0015\uE800\u0016\u6800\u0018\u2000\u0019\u3800\u0018\u2000\u0014\u3800\u0018'
    '\u3800\u0018\u1800\u3609\u1800\u3609\u1800\u3609\u1800\u3609\u1800\u3609\u1800'
    '\u3609\u1800\u3609\u1800\u3609\u1800\u3609\u1800\u3609\u3800\u0018\u6800\u0018'
    '\uE800\u0019\u6800\u0019\uE800\u0019\u6800\u0018\u6800\u0018\u0082\u7FE1\u0082\u7FE1\u0082'
    '\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1'
    '\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082'
    '\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1\u0082\u7FE1'
    '\u0082\u7FE1\uE800\u0015\u6800\u0018\uE800\u0016\u6800\u001B\u6800\u5017\u6800\u001B\u0081'
    '\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2'
    '\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081'
    '\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2'
    '\u0081\u7FE2\u0081\u7FE2\u0081\u7FE2\uE800\u0015\u6800\u0019\uE800\u0016\u6800\u0019\u4800'
    '\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u5000\u100F'
    '\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800'
    '\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F'
    '\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800'
    '\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F\u4800\u100F'
    '\u3800\u000C\u6800\u0018\u2800\u601A\u2800\u601A\u2800\u601A\u2800\u601A\u6800'
    '\u001C\u6800\u0018\u6800\u001B\u6800\u001C\u0000\u7005\uE800\u001D\u6800\u0019\u4800\u1010'
    '\u6800\u001C\u6800\u001B\u2800\u001C\u2800\u0019\u1800\u060B\u1800\u060B\u6800\u001B'
    '\u07FD\u7002\u6800\u0018\u6800\u0018\u6800\u001B\u1800\u050B\u0000\u7005\uE800\u001E'
    '\u6800\u080B\u6800\u080B\u6800\u080B\u6800\u0018\u0082\u7001\u0082\u7001\u0082\u7001'
    '\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u0082'
    '\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001'
    '\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u6800\u0019\u0082\u7001\u0082'
    '\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u0082\u7001\u07FD\u7002\u0081\u7002'
    '\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081'
    '\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002'
    '\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u6800'
    '\u0019\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002\u0081\u7002'
    '\u061D\u7002';

/// A minimal port of java.lang.CharacterDataLatin1
class CharacterDataLatin1 extends CharacterData {
  final A = <int>[];

  CharacterDataLatin1._() : super.internal() {
    final data = _LatinA_Data.codeUnits;
    assert(data.length == 256 * 2);
    int i = 0;

    while (i < (256 * 2)) {
      final first = data[i++] << 16;
      final second = data[i++];
      A.add(first | second);
    }
  }

  static CharacterDataLatin1? _instance;
  factory CharacterDataLatin1.instance() {
    _instance ??= CharacterDataLatin1._();
    return _instance!;
  }

  @override
  int getProperties(int ch) {
    int offset = ch & 0xFFFF; // Only use the bottom 2 bytes
    return A[offset];
  }

  @override
  int getType(int ch) {
    final props = getProperties(ch);
    return (props & 0x1F);
  }

  @override
  int getDirectionality(int ch) {
    final val = getProperties(ch);
    final directionality = ((val & 0x78000000) >> 27);
    return (directionality == 0xF)
        ? Character.DirectionalityUndefined
        : directionality;
  }
}
